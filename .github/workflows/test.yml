name: Integration Test with Wallet Server

on:
  pull_request:
    branches:
      - main
      - dev
      - feature/*
    paths:
      - "src/**"
      - "tests/**"
      - "package.json"
      - "bun.lock"
      - ".github/workflows/test.yml"
  push:
    branches:
      - main
      - dev
    paths:
      - "src/**"
      - "tests/**"
      - "package.json"
      - "bun.lock"
      - ".github/workflows/test.yml"
  workflow_dispatch:

permissions:
  contents: read
  packages: read
  id-token: write
  actions: read

jobs:
  test:
    name: TypeScript SDK Integration Tests
    runs-on: blacksmith-2vcpu-ubuntu-2404
    timeout-minutes: 30
    permissions:
      contents: read
      packages: read
      actions: read

    steps:
      - name: Generate GitHub token
        uses: actions/create-github-app-token@v2
        id: generate-token
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}
          repositories: |
            ts-sdk
            spark-prefunding-client

      - name: Checkout TypeScript SDK Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          path: ts-sdk
          token: ${{ steps.generate-token.outputs.token }}

      - name: Checkout Wallet Server Repository
        uses: actions/checkout@v4
        with:
          repository: flashnetxyz/spark-prefunding-client
          token: ${{ steps.generate-token.outputs.token }}
          ref: main
          path: wallet-server
          fetch-depth: 1

      - name: Set up Node.js for Wallet Server
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: wallet-server/package-lock.json

      - name: Set up Bun for TypeScript SDK
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install Dependencies and Build
        run: |
          echo "Installing wallet server dependencies..."
          cd wallet-server && npm ci
          
          echo "Installing TypeScript SDK dependencies..."
          cd ../ts-sdk && bun install
          
          echo "Building TypeScript SDK..."
          bun run build

      - name: Setup Wallet Server and Run Tests
        run: |
          echo "=== Setting up wallet manager ==="
          cd wallet-server
          mkdir -p outputs logs
          npx tsx src/wallet-manager-setup.ts --env prod_regtest --num-wallets 15
          
          echo "=== Starting wallet server with logging ==="
          nohup npx tsx src/server.ts --env prod_regtest > logs/wallet-server.log 2>&1 &
          WALLET_PID=$!
          echo "Wallet server started with PID: $WALLET_PID"
          
          echo "=== Waiting for wallet server to be ready ==="
          max_attempts=30
          attempt=1
          
          while [ $attempt -le $max_attempts ]; do
            if curl -f http://localhost:3456/health > /dev/null 2>&1; then
                echo "✓ Wallet server is ready (attempt $attempt)"
                break
            else
                echo "Attempt $attempt/$max_attempts: Wallet server not ready, retrying in 3 seconds..."
                if [[ -f logs/wallet-server.log ]]; then
                    echo "Recent logs:"
                    tail -3 logs/wallet-server.log
                fi
                sleep 3
                attempt=$((attempt + 1))
            fi
          done
          
          if [ $attempt -gt $max_attempts ]; then
              echo "❌ Wallet server failed to start"
              echo "=== Complete wallet server logs ==="
              cat logs/wallet-server.log 2>/dev/null || echo "No logs found"
              exit 1
          fi
          
          echo "=== Running TypeScript SDK Tests ==="
          cd ../ts-sdk
          export WALLET_SERVER_URL="http://localhost:3456"
          export NODE_ENV="test"
          
          echo "Running simple flow tests..."
          bun test tests/integration/simple-flow.test.ts || TEST_EXIT_CODE=$?
          
          echo "Running complex flow tests..."
          bun test tests/integration/complex-flow.test.ts || TEST_EXIT_CODE=$?
          
          echo "Running compatibility tests..."
          bun run test:compatibility || TEST_EXIT_CODE=$?
          
          echo "=== Final wallet server status ==="
          if ps -p $WALLET_PID > /dev/null; then
              echo "Wallet server still running"
              tail -5 ../wallet-server/logs/wallet-server.log
          else
              echo "Wallet server stopped"
          fi
          
          # Stop wallet server
          kill $WALLET_PID 2>/dev/null || true
          
          # Exit with test result
          exit ${TEST_EXIT_CODE:-0}
        timeout-minutes: 25

      - name: Collect Logs
        if: always()
        run: |
          echo "=== System Processes ==="
          ps aux | grep -E "(tsx|bun|node)" || true
          
          echo "=== Network Connections ==="
          netstat -tlnp | grep 3456 || true
          
          echo "=== Complete Wallet Server Logs ==="
          if [[ -f wallet-server/logs/wallet-server.log ]]; then
              cat wallet-server/logs/wallet-server.log
          else
              echo "No wallet server logs found"
          fi
          
          echo "=== Test Output ==="
          find ts-sdk -name "*.log" -exec cat {} \; || true
